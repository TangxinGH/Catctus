import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}


android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId "com.zhu.cactus"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 7
        versionName "6.7.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true//减小apk包大小
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//  默认true          zipAlignEnabled true //https://stackoverflow.com/questions/27945655/is-app-release-apk-zipaligned-apk
            // 字节 对齐 https://google.github.io/android-gradle-dsl/3.3/com.android.build.gradle.internal.dsl.BuildType.html#com.android.build.gradle.internal.dsl.BuildType:zipAlignEnabled
        }
        debug {
            minifyEnabled false
            shrinkResources false//减小apk包大小
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> outputFileName = "Catctus-release-v${variant.versionName}-${releaseTime()}.apk"
            } // 名称

//
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    https://medium.com/@imstudio/android-cannot-inline-bytecode-built-with-jvm-target-1-8-8dcde8bbfc14
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8  //解决内联 问题
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.4.0'


    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.gyf.cactus:cactus:1.1.3-beta13'//保活
    implementation 'androidx.media:media:1.3.1' //通知栏媒体style
    implementation 'com.norbsoft.typefacehelper:library:0.9.0'//    字体库
/* bugly 腾迅 插件 */
//    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
//    implementation 'com.tencent.bugly:nativecrashreport:3.7.500' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.2"
//json2bean https://github.com/FasterXML/jackson-module-kotlin
    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    implementation 'jp.wasabeef:glide-transformations:4.1.0'//变换图像
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'com.permissionx.guolindev:permissionx:1.4.0'
    // Kotlin + Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1' //版本要一致

    // Google/AndroidX Libraries
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1' // For lifecycleScope
    // SeekBar
    implementation 'com.crystal:crystalrangeseekbar:1.1.3'
    implementation project(":Nav")

}
//task buildAndSendNotification(dependsOn: 'assembleRelease') {
//    doLast {
//        println 'Hello from A'
//
//    }
//}

task modifyReleaseInfo() {

}
project.tasks.whenTaskAdded { Task task ->
//    println("有多少个任务啊？${task.name}")
    if (task.name == 'assembleRelease') { //打包时
        task.doLast {
            println("来自assembleRelease完成")
            println("来自修改output-metadata ？？ 或者 syncnow")
            def jsonFile = file('release/output-metadata.json')
            if (jsonFile.exists()) {
                def parsedJson = new JsonSlurper().parseText(jsonFile.text)
                def apk_file = file("release/${parsedJson.elements[0].outputFile}")//得到文件名
                parsedJson.apkSize = apk_file.exists() ?    ((int)(apk_file.length() / 1024 / 10.24))/100 : 5.4

                //    https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Exec.html
                def hashStdOut = new ByteArrayOutputStream()
                exec {
                    commandLine "cmd", "/c", "git show  --pretty=format:\"%s%n\" "
                    standardOutput = hashStdOut
                    //store the output instead of printing to the console:
                }
                def exeResult = hashStdOut.toString("UTF-8").readLines() //解决乱码问题，

                parsedJson.apkInfo = "世界你好\n${exeResult.size() > 0 ? exeResult[0] : ""}"
                jsonFile.write(JsonOutput.toJson(parsedJson)) //序例化
            }
        }
    }
}